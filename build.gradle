buildscript {
	ext {
		spring_fu_kofu_version = '0.0.3.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id('org.jetbrains.kotlin.jvm') version '1.3.11'
	id('io.spring.dependency-management') version '1.0.6.RELEASE'
	id('org.springframework.boot') version '2.1.1.RELEASE'
}


group = 'demo.kotlin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    compile("org.springframework.fu:spring-fu-kofu:$spring_fu_kofu_version")
	testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'junit', module: 'junit'
    }
	testCompile('io.projectreactor:reactor-test')
    testCompile('org.junit.jupiter:junit-jupiter-params')
	testCompile('org.junit.jupiter:junit-jupiter-api')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

// execute ./gradlew wrapper then remove .gradle directory when version change
wrapper {
	gradleVersion='5.0'
	distributionType=Wrapper.DistributionType.ALL
}
